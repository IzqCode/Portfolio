parser: '@typescript-eslint/parser'
env:
  browser: true
  es6: true
  node: true
settings:
  import/resolver:
    typescript:
      alwaysTryTypes: true
extends:
  - next
  - next/core-web-vitals
  - airbnb
  - 'plugin:@typescript-eslint/recommended'
parserOptions:
  ecmaFeatures:
    jsx: true
  ecmaVersion: 2018
  sourceType: module
plugins:
  - react
  - react-hooks
  - '@typescript-eslint'
rules:  
  # Redundant TS rules which can just be disabled.
  '@typescript-eslint/no-unused-vars': off

  # TS rules
  '@typescript-eslint/ban-ts-comment': off # We obviously need to use this in certain cases.
  '@typescript-eslint/no-non-null-assertion': off # Obviously if we're specifying this, we know this assertion to be true.
  '@typescript-eslint/explicit-module-boundary-types': off # This can often be inferred.
  '@typescript-eslint/type-annotation-spacing':
    - error


  # https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-use-before-define.md#how-to-use
  no-use-before-define: off
  '@typescript-eslint/no-use-before-define':
    - error
  no-shadow: off
  '@typescript-eslint/no-shadow':
    - error
  
  react/jsx-props-no-spreading: off # This is reasonable since we're using TS.
  react/jsx-filename-extension:
    - error
    - extensions:
      - .tsx
  react/react-in-jsx-scope: off # Next.js benefit.
  react/prop-types: off # Not worth it - let's just use TS properly.
  linebreak-style: off # Convenience for Windows.
  import/prefer-default-export: off # Case by case.
  max-len: # 100 is too little and often leads to uglier formatting.
    - error
    - code: 150
      tabWidth: 2
  arrow-parens: # No parenthesis are cleaner.
    - error
    - as-needed
  no-param-reassign: off # There are lots of valid use cases for this. Having it off leads to messy code with weird variables names.
  no-plusplus: # Obviously better for loops.
    - error
    - allowForLoopAfterthoughts: true
  object-curly-newline: # Define this rule ourselves since we don't want minProperties: 3 (this should be determined by line length).
    - error
    - multiline: true
      consistent: true
  import/extensions:
    - error
    - js: never
      jsx: never
      ts: never
      tsx: never
  react-hooks/rules-of-hooks:
    - error
  react-hooks/exhaustive-deps:
    - error
  react/jsx-one-expression-per-line: # Leads to really unclean code.
    - off
  arrow-body-style: off # This often leads to difficult-to-read inline functions.
  jsx-a11y/anchor-is-valid: off # This rule is broken.

  # We are not worried about accessibility.
  jsx-a11y/media-has-caption: off
  jsx-a11y/click-events-have-key-events: off
  jsx-a11y/role-has-required-aria-props: off
  jsx-a11y/no-static-element-interactions: off
